#summary API reference for emo.Stage
#labels Phase-Implementation
#sidebar Sidebar

= Introduction =

emo.Stage class represents one and only stage for your game. Stage class can be used to load the new level and enter the game loop, dispose the level and proceed to the next level.

== load ==

Stage#load load the level and delegates the event loop to the level. The loaded class can receive the event throught the event delegate functions like onLoad, onGainedFocus, onLostFocus and onDispose. It goes something like this:

{{{
class Level_1 {
    function onLoad() {
        // load something
    }
    function onDispose() {
        // dispose something
    }
}

emo.Stage.load(Level_1());
}}}

If the next level are loaded using Stage#load, the current level are disposed before loading the next level.

{{{
class Level_1 {
    function onLoad() {
        print("Level_1:onLoad");
    }
    function onDispose() {
        print("Level_1:onDispose");
    }
}
class Level_2 {
    function onLoad() {
        print("Level_2:onLoad");
    }
    function onDispose() {
        print("Level_2:onDispose");
    }
}
local stage = emo.Stage();
stage.load(Level_1());
stage.load(Level_2()); // Level_1#onDispose are called automatically before loading Level_2.

}}}

It prints like below:
{{{
Level1:onLoad
Level1:onDispose
Level2:onLoad
}}}

== windowWidth ==

Stage#windowWidth returns the screen width. If integer parameter has been set to the windowWidth window width is updated.

{{{
local stage = emo.Stage();
local width = stage.windowWidth(); // get the window width
stage.windowWidth(320); // set the window width to 320
}}}


== windowHeight ==

Stage#windowHeight returns the screen height. If integer parameter has been set to the windowHeight window height is updated.

{{{
local stage = emo.Stage();
local height = stage.windowHeight(); // get the window height
stage.windowHeight(240); // set the window height to 240
}}}

== viewport ==

Stage#viewport sets the viewport of the screen. Stage#viewport is just the proxy calls for OpenGL glViewport command. Default viewport size is just the same size as Stage#windowWidth and Stage#windowHeight.

{{{
local width  = 480;
local height = 320;
local stage = emo.Stage();
stage.viewport(width, height);
}}}

== ortho ==

Stage#ortho updates the orthogonal parameters for OpenGL. Stage#ortho is just the proxy calls for OpenGL glOrthof command. Default width and height are just the same size as Stage#windowWidth and Stage#windowHeight.

{{{
local width  = 480;
local height = 320;
emo.Stage.ortho(width, height);
}}}

== interval ==

Stage#interval updates the draw interval(millisecond) of the screen. This can be used to debug the game or limit the fps(frame per second) while loading the heavy assets.

{{{
emo.Stage.interval(100); // change update interval to 100 milliseconds
}}}