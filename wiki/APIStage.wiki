#summary API reference for emo.Stage
#labels Phase-Implementation

= Introduction =

emo.Stage class represents one and only stage for your game. Stage class can be used to load the new level and enter the game loop, dispose the level and proceed to the next level.

== load ==

Stage#load load the level and delegates the event loop to the level. The loaded class can receive the event throught the event delegate functions like onLoad, onGainedFocus, onLostFocus and onDispose. It goes something like this:

{{{
class Level_1 {
    function onLoad() {
        // load something
    }
    function onDispose() {
        // dispose something
    }
}

local stage = emo.Stage();
stage.load(Level_1());
}}}


== windowWidth ==

Stage#windowWidth returns the screen width. If integer parameter has been set to the windowWidth window width is updated.

{{{
local stage = emo.Stage();
stage.load(Level_1());
local width = stage.windowWidth(); // get the window width
stage.windowWidth(320); // set the window width to 320
}}}


== windowHeight ==

Stage#windowHeight returns the screen height. If integer parameter has been set to the windowHeight window height is updated.

{{{
local stage = emo.Stage();
stage.load(Level_1());
local height = stage.windowHeight(); // get the window height
stage.windowHeight(240); // set the window height to 240
}}}

== viewport ==

Stage#viewport sets the viewport of the screen.

== ortho ==

Stage#ortho updates the orthogonal parameters for OpenGL. 
== interval ==

Stage#interval updates the draw interval of the screen. This can be used to limit the fps(frame per second).