#summary API reference for emo.AudioChannel
#labels Phase-Design

= emo.AudioChannel =

== constructor ==

There is no constructor for audio channel. Use emo.Audio#createChannel to create new audio channel. See emo.[Audio] document for details.

{{{
local audio = emo.Audio(3);
local ch0   = audio.createChannel(0);
}}}

== load(filename) ==

AudioChannel#load loads the audio file with given filename. Every audio files should be placed under the *'Resources/sounds'* folder for iOS, *'assets/sounds'* directory for Android. 

=== Supported audio format: ===

==== For iOS ====

emo-framework uses 'Extended Audio File Services' for iOS so following format can be loaded through audio channel.  [http://developer.apple.com/library/ios/#documentation/MusicAudio/Reference/AudioFileConvertRef/Reference/reference.html#//apple_ref/doc/c_ref/AudioFileTypeID Extended Audio File Services: Built-In Audio File Types].

==== For Android ====

Only linear PCM wave audio can be loaded through audio channel.

{{{
local audio = emo.Audio(3);
local ch0   = audio.craeteChannel(0);

ch0.load("bang.wav");
}}}

== play ==

Plays the audio associated with the channel. Audio channel is automatically stopped when the audio play ends if no loop has been specified by setLoop.

{{{
local audio = emo.Audio(3);
local ch0   = audio.craeteChannel(0);

ch0.load("bang.wav");

ch0.play();
}}}

== stop ==

Stops the audio associated with the channel. The current seek position is reset to the beginning.

{{{
local audio = emo.Audio(3);
local ch0   = audio.craeteChannel(0);

ch0.load("bang.wav");

ch0.play();

// stops channel 0
ch0.stop();

// ch0 plays from the beginning
ch0.play();
}}}


== pause ==

Pauses the audio associated with the channel. The audio is resumed when play() is called.

{{{
local audio = emo.Audio(3);
local ch0   = audio.craeteChannel(0);

ch0.load("bang.wav");

ch0.play();

// pauses channel 0
ch0.pause();

// ch0 plays from the paused position
ch0.play();
}}}

== seek(offset) ==

Seek the audio associated with the channel. The offset is milliseconds from the beginning of the audio.

{{{
local audio = emo.Audio(3);
local ch0   = audio.craeteChannel(0);

ch0.load("bang.wav");

ch0.play();

// seek back to the beginning.
ch0.seek(0);

// ch0 plays from the beginning
ch0.play();
}}}
