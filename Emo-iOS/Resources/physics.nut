/******************************************************
 *                                                    *
 *   PHYSICS CLASSES AND CONSTANTS FOR EMO-FRAMEWORK  *
 *                                                    *
 *            !!DO NOT EDIT THIS FILE!!               *
 ******************************************************/

class emo.Vec2 {
	x = null;
	y = null;
	function constructor(_x, _y) {
		x = _x;
		y = _y;
	}
	
	function set(_x, _y) {
		x = _x;
		y = _y;
	}
}

emo.physics <- {};

class emo.physics.World {
	id      = null;
	alive   = null;
	physics = emo.Physics();
	function constructor(gravity, doSleep) {
		id = physics.newWorld(gravity, doSleep);
		alive = true;
	}
	
	function createBody(bodydef) {
		return emo.physics.Body(physics.createBody(bodydef));
	}
	
	function destroyBody(body) {
		physics.destroyBody(body.id);
	}
	
	function createJoint(jointdef) {
		return emo.physics.Joint(physics.createJoint(jointdef));
	}
	
	function destroyJoint(joint) {
		physics.destroyJoint(joint.id);
	}
	
	function close() {
		physics.deleteWorld(id);
		alive = false;
	}
}

class emo.physics.AABB {
	lowerBound = null;
	upperBound = null;
}

class emo.physics.Body {
	id      = null;
	physics = emo.Physics();
	function constructor(_id) {
		id = _id;
	}
	
	function createFixture(fixturedef) {
		return emo.physics.Fixture(physics.createFixture(id, fixturedef));
	}
	
	function destroyFixture(fixture) {
		physics.destroyFixture(fixture.id);
	}
}

class emo.physics.BodyDef {
	type            = null;
	position        = null;
	angle           = null;
	linearVelocity  = null;
	angularVelocity = null;
	linearDamping   = null;
	angularDamping  = null;
	allowSleep      = null;
	awake           = null;
	fixedRotation   = null;
	bullet          = null;
	active          = null;
	userData        = null;
	inertiaScale    = null;
}

class emo.physics.Fixture {
	id = null;
	function constructor(_id) {
		id = _id;
	}
}

class emo.physics.FixtureDef {
	id          = null;
	shape       = null;
	friction    = null;
	restitution = null;
	density     = null;
	isSensor    = null;
	filter      = null;
}

class emo.physics.Joint {
	id = null;
	function constructor(_id) {
		id = _id;
	}
}

class emo.physics.JointDef {
	type     = null;
	userData = null;
	bodyA    = null;
	bodyB    = null;
	collideConnected = null;
}

class emo.physics.Shape {
	m_type   = SHAPE_TYPE_UNKNOWN;
	m_radius = null;
}

class emo.physics.PolygonShape extends emo.physics.Shape {
	m_type = SHAPE_TYPE_POLYGON;
	m_centroid    = null;
	m_verticles   = null;
	m_normals     = null;
	m_vertexCount = null;
	physics = emo.Physics();

	function set(vertices, vertexCount) {
		physics.polygonShape_set(id, vertices, vertexCount);
	}
	
	function setAsBox(hx, hy) {
		physics.polygonShape_setAsBox(id, hx, hy);
	}
}

class emo.physics.CircleShape extends emo.physics.Shape {
	m_type = SHAPE_TYPE_CIRCLE;
	m_p = null;
}